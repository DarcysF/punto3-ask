name: CI/CD to ACR & AKS (no-az-login)

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR using admin credentials
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build and push image to ACR
        run: |
          TAG=${GITHUB_SHA::8}
          IMAGE=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$TAG
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Prepare kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Ensure namespace exists
        run: |
          kubectl get namespace guestbook || kubectl create namespace guestbook

      - name: Deploy to AKS
        run: |
          TAG=${GITHUB_SHA::8}
          IMAGE=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:$TAG
          sed -i "s|REPLACE_WITH_IMAGE|${IMAGE}|g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml -n guestbook
          kubectl apply -f k8s/service.yaml -n guestbook
